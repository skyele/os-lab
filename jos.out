+ ld obj/kern/kernel
+ mk obj/kern/kernel.img
pading space in the right to number 22: 22       .

error! writing through NULL pointer! (%n argument)
show me the sign: +1024, -1024
Physical memory: 131072K available, base = 640K, extended = 130432K
check_page_free_list() succeeded!
check_page_alloc() succeeded!
check_page() succeeded!
check_kern_pgdir() succeeded!
check_page_free_list() succeeded!
check_page_installed_pgdir() succeeded!
SMP: CPU 0 found 1 CPU(s)
enabled interrupts: 1 2 4
PCI: 00:00.0: 8086:1237: class: 6.0 (Bridge device) irq: 0
PCI: 00:01.0: 8086:7000: class: 6.1 (Bridge device) irq: 0
PCI: 00:01.1: 8086:7010: class: 1.1 (Storage controller) irq: 0
PCI: 00:01.3: 8086:7113: class: 6.80 (Bridge device) irq: 9
PCI: 00:02.0: 1234:1111: class: 3.0 (Display controller) irq: 0
PCI: 00:03.0: 8086:100e: class: 2.0 (Network controller) irq: 11
in pci_e1000_attach
PCI function 00:03.0 (8086:100e) enabled
in env_create
[00000000] new env 00001000
in env_create
[00000000] new env 00001001
in env_create
[00000000] new env 00001002
4097: in libmain.c call umain!
before umain
4097: in umain serv.c
[00001001] new env 00001003
4098: in libmain.c call umain!
before umain
4096: in libmain.c call umain!
before umain
4096: in serv.c umain
FS is running
FS can do I/O
Device 1 presence: 1
block cache is good
superblock is good
bitmap is good
in serve
[00001001] new env 00001004
[00001001] new env 00001005
4101: after fork
in output
in sys_get_mac_addr the mac_addr is 0x0000000012005452
the mac_addr is 0x0000000012005452
ns: 52:54:00:12:34:56 bound to static IP 10.0.2.15
NS: TCP/IP initialized.
in e1000_tx
Waiting for http connections...
in e1000_tx
in e1000_tx
the path /random_file.txt
in e1000_tx
qemu: terminating on signal 15 from pid 118241
